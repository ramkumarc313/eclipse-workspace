/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.twiml.voice;

import com.twilio.converter.Promoter;
import com.twilio.http.HttpMethod;
import org.junit.Assert;
import org.junit.Test;

import java.net.URI;
import java.util.List;

/**
 * Test class for {@link Conference}
 */
public class ConferenceTest {
    @Test
    public void testElementWithParams() {
        Conference elem = new Conference.Builder("name")
            .muted(true)
            .beep(Conference.Beep.TRUE)
            .startConferenceOnEnter(true)
            .endConferenceOnExit(true)
            .waitUrl(URI.create("https://example.com"))
            .waitMethod(HttpMethod.GET)
            .maxParticipants(1)
            .record(Conference.Record.DO_NOT_RECORD)
            .region(Conference.Region.US1)
            .whisper("CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX")
            .trim(Conference.Trim.TRIM_SILENCE)
            .statusCallbackEvents(Promoter.listOfOne(Conference.Event.START))
            .statusCallback(URI.create("https://example.com"))
            .statusCallbackMethod(HttpMethod.GET)
            .recordingStatusCallback(URI.create("https://example.com"))
            .recordingStatusCallbackMethod(HttpMethod.GET)
            .recordingStatusCallbackEvents(Promoter.listOfOne(Conference.RecordingEvent.STARTED))
            .eventCallbackUrl(URI.create("https://example.com"))
            .build();

        Assert.assertEquals(
            "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" +
            "<Conference beep=\"true\" endConferenceOnExit=\"true\" eventCallbackUrl=\"https://example.com\" maxParticipants=\"1\" muted=\"true\" record=\"do-not-record\" recordingStatusCallback=\"https://example.com\" recordingStatusCallbackEvent=\"started\" recordingStatusCallbackMethod=\"GET\" region=\"us1\" startConferenceOnEnter=\"true\" statusCallback=\"https://example.com\" statusCallbackEvent=\"start\" statusCallbackMethod=\"GET\" trim=\"trim-silence\" waitMethod=\"GET\" waitUrl=\"https://example.com\" whisper=\"CAXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\">name</Conference>",
            elem.toXml()
        );
    }
}